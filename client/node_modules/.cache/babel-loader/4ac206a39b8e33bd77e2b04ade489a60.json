{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/melissakepler/Desktop/appointment-form/client/src/components/Modal.js\";\n\n/*import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MODAL_CLOSE, UPDATE_FIELDS } from '../actions/formActions';\n\nclass Modal extends Component {\n  /*constructor(props){\n    super(props);\n    this.state = {\n      fname: null,\n      lname: null,\n      phone: null\n    }\n  }\n  \n  /*componentDidMount() {\n    //console.log(\"this \", this.props.entry);\n    if(this.props.entry.fname){\n      //console.log(\"trying \", this.props.entry.fname )\n      document.getElementById('fname').value = this.props.entry.fname;\n      document.getElementById('lname').value = this.props.entry.lname;\n      document.getElementById('phone').value = this.props.entry.phone;\n      this.setState({\n        id: this.props.entry.id,\n        fname: this.props.entry.fname,\n        lname: this.props.entry.lname,\n        phone: this.props.entry.phone\n      });\n\n    } else {\n      //console.log(\"it doesn't \");\n      return false;\n    }\n  }*/\n\n/*close = (e) => {\n  e.preventDefault();\n  //console.log(\"tryna close\");\n  this.props.clickClose();\n}\n\n   handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n   \n  handleSubmit = (e) => {\n    e.preventDefault();\n    let entry = {\n      id: this.state.id,\n      fname: this.state.fname,\n      lname: this.state.lname,\n      phone: this.state.phone\n    }\n    //console.log(\"state in handle submit\", this.state);\n    //console.log(\"entry in handle submit\", entry);\n    \n    this.props.returndata(entry)\n   }\n   \n\nrender() {\n  console.log(\"in the render \", this.props.id);\n  //const {handleSubmit, handleChange, close} = this.props;\n  return (\n    <div className='modal-bg'>\n    \n      <div className='modal-body'>\n      <span id='close'onClick={this.props.onPress}><button>X</button></span>\n        <form id='modal-form' onSubmit={this.props.formSubmit({id: this.id, fname: this.fname, lname: this.lname, phone: this.phone})}>\n          <label htmlFor='fname'>First Name:</label>\n          <br></br>\n          \n          <input name=\"fname\"  type='text' id='fname' onChange={e => this.props.onKeyup(e)} required></input>\n          <br></br>\n          <label htmlFor='lname'>Last Name:</label>\n          <br></br>\n          <input type='text' name='lname' id='lname' onChange={e => this.props.onKeyup(e)} required></input>\n          <br></br>\n          <label htmlFor='phone'>Phone:</label>\n          <br></br>\n          <input type='tel' name='phone' id='phone' pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' onChange={e => this.props.onKeyup(e)} required></input>\n          <br></br>\n          <button className='submit-button'>Submit</button>\n        </form>\n      </div>\n      \n    </div>\n  )\n}\n}\n\nconst mapStateToProps = (store) => {\nreturn {\n  modal_visible: store.appointmentsReducer.modal_visible,\n  current: store.appointmentsReducer.current,\n  id: store.appointmentsReducer.id,\n  fname: store.appointmentsReducer.fname,\n  lname: store.appointmentsReducer.lname,\n  phone: store.appointmentsReducer.phone\n  \n   //current: state.current,\n  //current_data: state.current_data,\n // appointments: state.appointments\n}\n}\nconst mapDispatchToProps = (dispatch) => ({\nonPress: () => {\n  dispatch({type: MODAL_CLOSE})\n},\nonKeyup: (data) => {\n  dispatch({type: UPDATE_FIELDS, payload: data})\n}\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);*/\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar ContactForm = function ContactForm(props) {\n  var handleSubmit = _this.props.onSubmit.handleSubmit;\n  return React.createElement(\"div\", {\n    className: \"modal-bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"close\",\n    onClick: _this.props.onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"X\")), React.createElement(\"form\", {\n    id: \"modal-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"fname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"First Name:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"input\",\n    name: \"fname\",\n    type: \"text\",\n    id: \"fname\",\n    onChange: function onChange(e) {\n      return _this.props.onKeyup(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"lname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Last Name:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"input\",\n    type: \"text\",\n    name: \"lname\",\n    id: \"lname\",\n    onChange: function onChange(e) {\n      return _this.props.onKeyup(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Phone:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"input\",\n    type: \"tel\",\n    name: \"phone\",\n    id: \"phone\",\n    pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n    onChange: function onChange(e) {\n      return _this.props.onKeyup(e);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nContactForm = reduxForm({\n  form: 'contact'\n})(ContactForm);\nexport default ContactForm;","map":{"version":3,"sources":["/Users/melissakepler/Desktop/appointment-form/client/src/components/Modal.js"],"names":["React","Component","Field","reduxForm","ContactForm","props","handleSubmit","onSubmit","onClose","e","onKeyup","form"],"mappings":"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","sourcesContent":["/*import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MODAL_CLOSE, UPDATE_FIELDS } from '../actions/formActions';\n\nclass Modal extends Component {\n  /*constructor(props){\n    super(props);\n    this.state = {\n      fname: null,\n      lname: null,\n      phone: null\n    }\n  }\n  \n  /*componentDidMount() {\n    //console.log(\"this \", this.props.entry);\n    if(this.props.entry.fname){\n      //console.log(\"trying \", this.props.entry.fname )\n      document.getElementById('fname').value = this.props.entry.fname;\n      document.getElementById('lname').value = this.props.entry.lname;\n      document.getElementById('phone').value = this.props.entry.phone;\n      this.setState({\n        id: this.props.entry.id,\n        fname: this.props.entry.fname,\n        lname: this.props.entry.lname,\n        phone: this.props.entry.phone\n      });\n\n    } else {\n      //console.log(\"it doesn't \");\n      return false;\n    }\n  }*/\n  \n\n  \n  /*close = (e) => {\n    e.preventDefault();\n    //console.log(\"tryna close\");\n    this.props.clickClose();\n  }\n  \n\n    handleChange = (e) => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    }\n\n    \n    handleSubmit = (e) => {\n      e.preventDefault();\n      let entry = {\n        id: this.state.id,\n        fname: this.state.fname,\n        lname: this.state.lname,\n        phone: this.state.phone\n      }\n      //console.log(\"state in handle submit\", this.state);\n      //console.log(\"entry in handle submit\", entry);\n      \n      this.props.returndata(entry)\n\n    }\n\n    \n  \n  render() {\n    console.log(\"in the render \", this.props.id);\n    //const {handleSubmit, handleChange, close} = this.props;\n    return (\n      <div className='modal-bg'>\n      \n        <div className='modal-body'>\n        <span id='close'onClick={this.props.onPress}><button>X</button></span>\n          <form id='modal-form' onSubmit={this.props.formSubmit({id: this.id, fname: this.fname, lname: this.lname, phone: this.phone})}>\n            <label htmlFor='fname'>First Name:</label>\n            <br></br>\n            \n            <input name=\"fname\"  type='text' id='fname' onChange={e => this.props.onKeyup(e)} required></input>\n            <br></br>\n            <label htmlFor='lname'>Last Name:</label>\n            <br></br>\n            <input type='text' name='lname' id='lname' onChange={e => this.props.onKeyup(e)} required></input>\n            <br></br>\n            <label htmlFor='phone'>Phone:</label>\n            <br></br>\n            <input type='tel' name='phone' id='phone' pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' onChange={e => this.props.onKeyup(e)} required></input>\n            <br></br>\n            <button className='submit-button'>Submit</button>\n          </form>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (store) => {\n  return {\n    modal_visible: store.appointmentsReducer.modal_visible,\n    current: store.appointmentsReducer.current,\n    id: store.appointmentsReducer.id,\n    fname: store.appointmentsReducer.fname,\n    lname: store.appointmentsReducer.lname,\n    phone: store.appointmentsReducer.phone\n    \n\n    //current: state.current,\n    //current_data: state.current_data,\n   // appointments: state.appointments\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onPress: () => {\n    dispatch({type: MODAL_CLOSE})\n  },\n  onKeyup: (data) => {\n    dispatch({type: UPDATE_FIELDS, payload: data})\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);*/\n\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nlet ContactForm = props => {\n  const { handleSubmit } = this.props.onSubmit;\n  return (\n    <div className='modal-bg'>\n      \n      <div className='modal-body'>\n      <span id='close' onClick={this.props.onClose}><button>X</button></span>\n        <form id='modal-form' onSubmit={handleSubmit}>\n          <label htmlFor='fname'>First Name:</label>\n          <br></br>\n          \n          <Field component='input' name=\"fname\"  type='text' id='fname' onChange={e => this.props.onKeyup(e)} required />\n          <br></br>\n          <label htmlFor='lname'>Last Name:</label>\n          <br></br>\n          <Field component='input' type='text' name='lname' id='lname' onChange={e => this.props.onKeyup(e)} required />\n          <br></br>\n          <label htmlFor='phone'>Phone:</label>\n          <br></br>\n          <Field component='input' type='tel' name='phone' id='phone' pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' onChange={e => this.props.onKeyup(e)} required />\n          <br></br>\n          <button className='submit-button'>Submit</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nContactForm = reduxForm({\n  form: 'contact'\n})(ContactForm);\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}