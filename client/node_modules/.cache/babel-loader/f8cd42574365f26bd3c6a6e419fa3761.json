{"ast":null,"code":"import _defineProperty from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissakepler/Desktop/appointment-form/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissakepler/Desktop/appointment-form/client/src/components/Modal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MODAL_CLOSE, UPDATE_ENTRY } from '../actions/formActions';\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.state = {\n      fname: null,\n      lname: null,\n      phone: null\n    };\n    return _this;\n  }\n  /*componentDidMount() {\n    //console.log(\"this \", this.props.entry);\n    if(this.props.entry.fname){\n      //console.log(\"trying \", this.props.entry.fname )\n      document.getElementById('fname').value = this.props.entry.fname;\n      document.getElementById('lname').value = this.props.entry.lname;\n      document.getElementById('phone').value = this.props.entry.phone;\n      this.setState({\n        id: this.props.entry.id,\n        fname: this.props.entry.fname,\n        lname: this.props.entry.lname,\n        phone: this.props.entry.phone\n      });\n     } else {\n      //console.log(\"it doesn't \");\n      return false;\n    }\n  }*/\n\n  /*close = (e) => {\n    e.preventDefault();\n    //console.log(\"tryna close\");\n    this.props.clickClose();\n  }\n  */\n\n\n  _createClass(Modal, [{\n    key: \"render\",\n\n    /*\n    handleSubmit = (e) => {\n      e.preventDefault();\n      let entry = {\n        id: this.state.id,\n        fname: this.state.fname,\n        lname: this.state.lname,\n        phone: this.state.phone\n      }\n      //console.log(\"state in handle submit\", this.state);\n      //console.log(\"entry in handle submit\", entry);\n      \n      this.props.returndata(entry)\n     }*/\n    value: function render() {\n      //const {handleSubmit, handleChange, close} = this.props;\n      return React.createElement(\"div\", {\n        className: \"modal-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"close\",\n        onClick: this.props.onPress({\n          id: this.props.id,\n          fname: this.state.fname,\n          lname: this.state.lname,\n          phone: state.phone\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"X\")), React.createElement(\"form\", {\n        id: \"modal-form\",\n        onSubmit: this.props.formSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"fname\",\n        type: \"text\",\n        id: \"fname\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"lname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lname\",\n        id: \"lname\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submit-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    modal_visible: store.modalReducer.modal_visible,\n    current: store.modalReducer.current,\n    id: store.modalReducer.id,\n    fname: store.modalReducer.fname,\n    lname: store.modalReducer.lname,\n    phone: store.modalReducer.phone //current: state.current,\n    //current_data: state.current_data,\n    // appointments: state.appointments\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onPress: function onPress() {\n      dispatch({\n        type: MODAL_CLOSE\n      });\n    },\n    formSubmit: function formSubmit(data) {\n      dispatch({\n        type: UPDATE_ENTRY,\n        payload: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","map":{"version":3,"sources":["/Users/melissakepler/Desktop/appointment-form/client/src/components/Modal.js"],"names":["React","Component","connect","MODAL_CLOSE","UPDATE_ENTRY","Modal","props","handleChange","e","setState","target","id","value","state","fname","lname","phone","onPress","formSubmit","mapStateToProps","store","modal_visible","modalReducer","current","mapDispatchToProps","dispatch","type","data","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MODAL_CLOSE, UPDATE_ENTRY } from '../actions/formActions';\n\nclass Modal extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fname: null,\n      lname: null,\n      phone: null\n    }\n  }\n  \n  /*componentDidMount() {\n    //console.log(\"this \", this.props.entry);\n    if(this.props.entry.fname){\n      //console.log(\"trying \", this.props.entry.fname )\n      document.getElementById('fname').value = this.props.entry.fname;\n      document.getElementById('lname').value = this.props.entry.lname;\n      document.getElementById('phone').value = this.props.entry.phone;\n      this.setState({\n        id: this.props.entry.id,\n        fname: this.props.entry.fname,\n        lname: this.props.entry.lname,\n        phone: this.props.entry.phone\n      });\n\n    } else {\n      //console.log(\"it doesn't \");\n      return false;\n    }\n  }*/\n  \n\n  \n  /*close = (e) => {\n    e.preventDefault();\n    //console.log(\"tryna close\");\n    this.props.clickClose();\n  }\n  */\n\n    handleChange = (e) => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    }\n\n    /*\n    handleSubmit = (e) => {\n      e.preventDefault();\n      let entry = {\n        id: this.state.id,\n        fname: this.state.fname,\n        lname: this.state.lname,\n        phone: this.state.phone\n      }\n      //console.log(\"state in handle submit\", this.state);\n      //console.log(\"entry in handle submit\", entry);\n      \n      this.props.returndata(entry)\n\n    }*/\n\n    \n  \n  render() {\n    //const {handleSubmit, handleChange, close} = this.props;\n    return (\n      <div className='modal-bg'>\n      \n        <div className='modal-body'>\n        <span id='close'onClick={this.props.onPress({id: this.props.id, fname: this.state.fname, lname: this.state.lname, phone: state.phone})}><button>X</button></span>\n          <form id='modal-form' onSubmit={this.props.formSubmit}>\n            <label htmlFor='fname'>First Name:</label>\n            <br></br>\n            \n            <input name=\"fname\"  type='text' id='fname' onChange={this.handleChange} required></input>\n            <br></br>\n            <label htmlFor='lname'>Last Name:</label>\n            <br></br>\n            <input type='text' name='lname' id='lname' onChange={this.handleChange} required></input>\n            <br></br>\n            <label htmlFor='phone'>Phone:</label>\n            <br></br>\n            <input type='tel' name='phone' id='phone' pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' onChange={this.handleChange} required></input>\n            <br></br>\n            <button className='submit-button'>Submit</button>\n          </form>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (store) => {\n  return {\n    modal_visible: store.modalReducer.modal_visible,\n    current: store.modalReducer.current,\n    id: store.modalReducer.id,\n    fname: store.modalReducer.fname,\n    lname: store.modalReducer.lname,\n    phone: store.modalReducer.phone\n    \n\n    //current: state.current,\n    //current_data: state.current_data,\n   // appointments: state.appointments\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onPress: () => {\n    dispatch({type: MODAL_CLOSE})\n  },\n  formSubmit: (data) => {\n    dispatch({type: UPDATE_ENTRY, payload: data})\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);"]},"metadata":{},"sourceType":"module"}